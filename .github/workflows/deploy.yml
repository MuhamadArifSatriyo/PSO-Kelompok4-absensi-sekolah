name: CD to Azure VM with SSH

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: myapp
      ACR_NAME: ${{ secrets.AZURE_REGISTRY_USERNAME }}
      ACR_LOGIN_SERVER: ${{ secrets.AZURE_REGISTRY_URL }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Login to ACR
      run: echo ${{ secrets.AZURE_REGISTRY_PASSWORD }} | docker login $ACR_LOGIN_SERVER -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Tag Docker image
      run: docker tag $IMAGE_NAME:latest $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

    - name: Push Docker image
      run: docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

    - name: Install Ansible & SSH
      run: sudo apt-get update && sudo apt-get install -y ansible sshpass

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy via Ansible
      run: |
        echo "[web]
        ${{ secrets.AZURE_VM_HOST }}" > ansible/inventory.ini

        ansible-playbook -i ansible/inventory.ini ansible/playbook.yml \
          -u ${{ secrets.AZURE_VM_USERNAME }} \
          --private-key ~/.ssh/id_rsa \
          --extra-vars "acr_username=${{ secrets.AZURE_REGISTRY_USERNAME }} acr_password=${{ secrets.AZURE_REGISTRY_PASSWORD }} acr_server=${{ env.ACR_LOGIN_SERVER }}"
