name: CI pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  php-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: db_absensi_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, pdo_mysql, mysqli
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Validate composer files
        run: composer validate --strict

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Dump autoload
        run: composer dump-autoload

      - name: Run Unit Tests with PHPUnit
        run: composer run-script test

  docker-build:
    runs-on: ubuntu-latest
    needs: php-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AZURE_REGISTRY_URL }}/ci-app:latest .

  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURE_REGISTRY_URL }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Push Docker image to ACR
        run: |
          docker push ${{ secrets.AZURE_REGISTRY_URL }}/ci-app:latest
